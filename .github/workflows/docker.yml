name: Docker Image CI

on:
  push:
    branches: ["master"]
    tags:
      - "v.*.*.*"
  pull_request:
    branches: ["master"]
  release:
    types: [published, edited]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Docker Login
        env:
          DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKERHUB_PASSWORD}}
        run: sudo docker login -u $DOCKER_USER -p $DOCKER_PASSWORD

      - name: Build the Docker image
        env:
          DOCKER_REPO: ${{secrets.DOCKERHUB_REPOSITORY}}
        run: sudo docker build --tag $DOCKER_REPO:latest .

      - name: Adding Tags
        env:
          DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
          DOCKER_REPO: ${{secrets.DOCKERHUB_REPOSITORY}}
        run: sudo docker tag $DOCKER_REPO:latest $DOCKER_USER/$DOCKER_REPO:latest

      - name: Docker Push
        env:
          DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
          DOCKER_REPO: ${{secrets.DOCKERHUB_REPOSITORY}}
        run: sudo docker push $DOCKER_USER/$DOCKER_REPO:latest
#
#
#
# #  Taken from: https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python
# # and: https://docs.github.com/en/free-pro-team@latest/actions/guides/publishing-docker-images
# # and adapted. More info on workflow syntax: https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions
# name: build and push Docker image

# on:
#   push:
#     # Match all branches *without* a / in the name.
#     # This will exclude "sub" branches, such as "feature branches",
#     # named something like: "feature/my-feature". Those branches will
#     # likely contain "work in progress" code, so we will run the tests
#     # on the local machine and avoid using up GitHub Actions credits
#     # (if applicable, such as in `private` repositories).
#     # Filter syntax info: https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions#filter-pattern-cheat-sheet
#     branches:
#       - master
#   pull_request:
#     # Since pull requests come from "third parties", we will automatically
#     # test everything coming from the outside world, for good measure.
#     # The `branches` tag could also be omitted, yielding the same effect here.
#     branches:
#       - '**'
#   release:
#     types: [published, edited]

# jobs:
#   # Build and push the Docker image
#   push_to_registry:
#     name: Build and push Docker image to Docker Hub
#     # ...but only when a `release` is `published`
#     if: github.event_name == 'release' # && github.event.action == 'published'
#     runs-on: ubuntu-latest
#     steps:
#       - name: Check out the repo
#         uses: actions/checkout@v2
#         # if: ${{ github.ref == 'ref/head/master' }} # Info: https://docs.github.com/en/free-pro-team@latest/actions/reference/context-and-expression-syntax-for-github-actions#about-contexts-and-expressions

#       - name: Build and push image to the Docker Hub
#         uses: docker/build-push-action@v2 # Info: https://github.com/docker/build-push-action/tree/releases/v1#tags
#         # if: ${{ github.ref == 'ref/head/master' }}
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKERHUB_PASSWORD }}
#           repository: ${{ secrets.DOCKERHUB_REPOSITORY }}
#           tag_with_ref: true # Info: https://github.com/docker/build-push-action/tree/releases/v1#tag_with_ref
#           tag_with_sha: true # Info: https://github.com/docker/build-push-action/tree/releases/v1#tag_with_sha
#           tags: latest
#           # push: ${{ startsWith(github.ref, 'refs/tags/') }}
